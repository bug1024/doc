
worker_processes 1;

error_log logs/error.log;

events {
    worker_connections 1024;
}

http {
    server {
        listen 8181;

        location / {
            default_type text/html;

            content_by_lua_block {
                local mysql = require "resty.mysql"
                local db, err = mysql:new()
                if not db then
                    ngx.say("failed to instantiate mysql: ", err)
                    return
                end
                ngx.say("success to instantiate mysql");

                -- 1 sec
                db:set_timeout(1000)

                local ok, err, errno, sqlstate = db:connect{
                    host = "192.168.5.31",
                    port = 3306,
                    database = "wcar",
                    user = "w273cn",
                    password = "w273cn_gototop_0591",
                    max_packet_size = 1024 * 1024
                }

                if not ok then
                    ngx.say("failed to connect: ", err, ": ", errno, " ", sqlstate)
                    return
                end
                ngx.say("success to connect mysql");

                -- query
                res, err, errno, sqlstate = db:query("select * from car_sale limit 2")
                local cjson = require "cjson"
                ngx.say(cjson.encode(res))
            }
        }

        location ~ ^/app/(\w+)/? {
            default_type text/html;
            set $path $1;
            # lua脚步中的print是无法直接输出到页面上的会并重定向到log中
            content_by_lua_file app/$path.lua;
        }
    }
}

